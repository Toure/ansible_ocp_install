# roles/upi_installer/tasks/00_prepare_secrets.yml
- name: Fail if a valid secrets_backend is not chosen
  ansible.builtin.fail:
    msg: "Invalid 'secrets_backend' selected. Must be one of: vars, aws_secrets_manager, hashicorp_vault."
  when: secrets_backend not in ['vars', 'aws_secrets_manager', 'hashicorp_vault']

- name: Set secrets from 'vars' backend
  when: secrets_backend == 'vars'
  block:
    - name: Set secrets from plaintext variables
      ansible.builtin.set_fact:
        ocp_pull_secret: "{{ local_pull_secret_plaintext }}"
        ocp_ssh_public_key: "{{ ssh_public_key_plaintext }}"

- name: Set secrets from 'aws_secrets_manager' backend
  when: secrets_backend == 'aws_secrets_manager'
  block:
    - name: Retrieve pull secret from AWS Secrets Manager
      ansible.builtin.set_fact:
        ocp_pull_secret: "{{ lookup('community.aws.aws_secret', aws_pull_secret_name, region=aws_secret_region) }}"

    - name: Retrieve SSH public key from AWS Secrets Manager
      ansible.builtin.set_fact:
        ocp_ssh_public_key: "{{ lookup('community.aws.aws_secret', aws_ssh_key_secret_name, region=aws_secret_region) }}"

- name: Set secrets from 'hashicorp_vault' backend
  when: secrets_backend == 'hashicorp_vault'
  block:
    - name: Retrieve pull secret from HashiCorp Vault
      ansible.builtin.set_fact:
        ocp_pull_secret: "{{ lookup('community.hashi_vault.vault_lookup', 'secret=' + vault_pull_secret_path + ' key=' + vault_pull_secret_key) }}"

    - name: Retrieve SSH public key from HashiCorp Vault
      ansible.builtin.set_fact:
        ocp_ssh_public_key: "{{ lookup('community.hashi_vault.vault_lookup', 'secret=' + vault_ssh_key_path + ' key=' + vault_ssh_key_key) }}"

- name: Verify that secrets have been loaded
  ansible.builtin.fail:
    msg: "Failed to load secrets. 'ocp_pull_secret' or 'ocp_ssh_public_key' is not defined. Check your backend configuration."
  when: ocp_pull_secret is not defined or ocp_ssh_public_key is not defined
